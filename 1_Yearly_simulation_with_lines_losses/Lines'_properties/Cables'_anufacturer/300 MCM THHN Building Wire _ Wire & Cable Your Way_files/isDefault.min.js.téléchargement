define(['jquery','underscore','jquery/ui'],function($,_){'use strict';$.widget('mageworx.optionFeaturesIsDefault',{options:{},firstRun:function firstRun(optionConfig,productConfig,base,self){return;},update:function update(option,optionConfig,productConfig,base){var isDefaultArray=this.getIsDefaultValues(),optionValues=base.getNewlyShowedOptionValues();if(_.isEmpty(optionValues)||_.isEmpty(isDefaultArray)){return;}
$.each(optionValues,function(index,value){var optionType=isDefaultArray[value],$field=$('[data-option_type_id="'+value+'"]');if($field.css('display')!='none'){if($.inArray(optionType,['drop_down','multiple'])!==-1){if($.inArray(optionType,['multiple'])!==-1){var selectedValues=$field.closest('select').val();if(selectedValues===null){selectedValues=[];selectedValues.push($field.val());}else if($.isArray(selectedValues)){selectedValues.push($field.val());}
base.removeNewlyShowedOptionValue(value);$field.closest('select').val(selectedValues).change();}else{base.removeNewlyShowedOptionValue(value);if(!$field.closest('select').val()){$field.closest('select').val($field.val()).change();}}}else if($.inArray(optionType,['checkbox','radio'])!==-1){base.removeNewlyShowedOptionValue(value);var canCheck=false;if($.inArray(optionType,['checkbox'])!==-1){canCheck=true;}else{var apoData=base.getApoData();var $option=$field.parents('.field');var optionId=$option.attr('data-option_id');if(!_.isUndefined(apoData[optionId])){if(apoData[optionId].length==0){canCheck=true;}}}
if(canCheck===true){var $el=$field.find(':input');$el.prop('checked',true);$el.change();}}}});},getIsDefaultValues:function update(){return this.options.is_default_values;}});return $.mageworx.optionFeaturesIsDefault;});